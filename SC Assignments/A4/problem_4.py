# -*- coding: utf-8 -*-
"""problem_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xgc9MtwXRuQ4dwLLT-4xZbgHorX2usXb
"""

import numpy as np
import math

import numpy as np
import math

b, a= 3, 1
answer=0
trueval=-18.79829683678703

def func(x):
    return (100/x)*(math.sin(10/x))

def gauss(func,a,b,n):
  [x, weight] = np.polynomial.legendre.leggauss(n) #to get the weights
  ans =  0
  for i in range(n):
      ans += weight[i] * func(((b-a)/2)*x[i] + (b+a)/2)
  ans *= ((b-a)/2)
  return ans

for n in range(2, 65, 2):
  h=(b-a)/n
  answer=0
  for i in range(1, n//2):
    up=a+2*i*h
    low=a+2*(i-1)*h
    answer=answer+gauss(func, low, up, i)
  abserr=abs(trueval-answer)
  relerr=abserr/abs(trueval)
  print("For n=", n)
  print("the value of the integral is", answer)
  print("absolute error is", abserr)
  print('relative err is', relerr)
  print()